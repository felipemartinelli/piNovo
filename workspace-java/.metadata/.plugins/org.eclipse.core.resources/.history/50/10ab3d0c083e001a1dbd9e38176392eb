package br.org.generation.ClickIn.controller;

import java.util.ArrayList;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import br.org.generation.ClickIn.bd.BDPost;
import br.org.generation.ClickIn.model.Post;

@RestController
@CrossOrigin("*")
public class PostController {
	
	private BDPost bd = new BDPost();
	
	@PostMapping("/post/novo")
	public ResponseEntity<Post> novoPost(@RequestBody Post posts) {
		bd.gravar(posts);
		return ResponseEntity.ok(posts);
	}
	
	@GetMapping("/post/{id}")
	public ResponseEntity<Post> getPost(@PathVariable int id){
		Post pos = bd.buscar(id);
		if (pos != null) {  // encontrei um cliente com o ID especificado
			return ResponseEntity.ok(pos);
		}
		else {
			return ResponseEntity.notFound().build();
		}		
	}
	
	@GetMapping("/post/todos")
	public ResponseEntity<ArrayList<Post>> getAllPosts(){
			/* este trecho Ã© simulando uma consulta ao banco de dados */
			ArrayList<Post> lista = new ArrayList<Post>();
			for (int i=0;i<20;i++) {
				Post p = new Post();
				p.setIdPostagem((i+1)*100);
				p.setTitulo("Titulo "+(i+1));
				p.setTexto("Postagem"+(i+1));
				p.setLinkImage("foto"+(i+1));
				p.setDataInclusao("23/01/2020");
				
				lista.add(p);
			}
			return ResponseEntity.ok(lista);
		
	}
	
	@PutMapping("/post/alterar")
	public ResponseEntity<String> alteraPost(@RequestBody Post post){
		bd.atualizar(post);
		return ResponseEntity.ok("Success");
	}
	
//	@DeleteMapping("/post/{id}")
//	public ResponseEntity<String> removeCliente(@PathVariable int id){
//		if (bd.apagar(id)) {
//			return ResponseEntity.ok("DELETED");
//		}
//		else {
		//	return ResponseEntity.notFound().build();
	//	}
//	}
	
	
	

}
